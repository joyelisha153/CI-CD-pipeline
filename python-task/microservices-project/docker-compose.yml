version: '3.8'

services:
  # User Service Database
  user-db:
    image: postgres:15
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d userdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Task Service Database
  task-db:
    image: postgres:15
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - task_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taskdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build: ./user-service
    ports:
      - "8000:8000"
    environment:
      DB_URL: postgresql+asyncpg://postgres:password@user-db:5432/userdb
      JWT_SECRET_KEY: your-super-secret-key-change-in-production
      JWT_ALGORITHM: HS256
    depends_on:
      user-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Task Service
  task-service:
    build: ./task-service
    ports:
      - "8001:8000"
    environment:
      DB_URL: postgresql+asyncpg://postgres:password@task-db:5432/taskdb
    depends_on:
      task-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Gateway Service
  gateway-service:
    build: ./gateway-service
    ports:
      - "8002:8000"
    environment:
      USER_SERVICE_URL: http://user-service:8000
      TASK_SERVICE_URL: http://task-service:8000
      JWT_SECRET_KEY: your-super-secret-key-change-in-production
      JWT_ALGORITHM: HS256
    depends_on:
      - user-service
      - task-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: local-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - user-service
      - task-service
      - gateway-service

volumes:
  user_db_data:
  task_db_data:
